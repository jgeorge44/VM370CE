.* ---------------------------------------------------------------------
.ur .tt /COMINCO/CPWATCH 3.3/1 October 1980/;.bt //- % -//;
.ur .if '&site' ne 'COMINCO';.th .cs 1 ignore;.el .cs 2 ignore;
.rm chap save nosave
.in 0 0;.hi 0;.pi 0;
.ur .if &sysline gt 1 and '&2' ne 'NOPAGE';.th .pa;.el .cp 15;
.ul;.ce 1;.ur &1
.sp 2;
.rm end
.rm sec save nosave
.in 0 0;.hi 0;.pi 0;
.sp 3;.cp 12;.ul;.ur &1
.para;
.rm end
.rm verse save nosave
.in 0 0;.hi 0;.pi 0;
.sp 2;.cp 9;.oc +1;.ur &1
.para;
.rm end
.rm para save nosave
.hi 0;.in 0 0;.pi 0;
.sp 1;.cp 6;	
.rm end;
.rm point save nosave
.sp 1;.cp 3;
.in 10 0-5;.un 5;
.ur .if '&1' eq '';.ef;
.oc +1;.ur &1
.rm end;
.*
.* ---------------------------------------------------------------------
.chap 'A VM/370 Online Monitor'
.sp 10;
.*
     CPWATCH is an online performance monitor for VM/370.
It displays enough about the current activity of CP to allow an
intuitive grasp of system load, gross conflicts, and the currently
active users.
.*
.para;It displays its output on DIALled local 3270 MOD 2's.
.cs 2 on;.* extra for outsiders.
.para;CPWATCH 3.3 has been developed exclusively on a VM/370 system
using Basic Systems Extensions, 5748-XX8, but it should be easy to
adapt to unmodified VM/370, or to the Systems Extension Program.
.cs 2 off;
.*
.chap 'DESCRIPTION'
.sec 'CURRENT STATE'
Operational, stabilized.
Running on a 4331, and a 3031AP, under VM/370 Release 6.11
with Basic Systems Extensions (5748-XX8).
.*
.sec OPERATION
.cs 1 on;.* cominco
The monitoring machine is AUTOLOG1.  It is brought up automatically
at VM ipl time, and is only shut down by a failure in the program.
.*
.para;Access the machine with the command 'DIAL AUTOLOG1' on any
local 3270.  A menu panel will be brought up to describe
what is available.
.cs 1 off;
.*
.cs 2 on;.* outsider's explaination
The monitoring machine must have class E privledges.
Command "CPWX" will build a load deck and IPL it.
'DMKLD00E LOADER' must be available on an accessed disk.
.para;It is easiest to AUTOLOG the monitoring machine at VM/370
IPL time.
.para;Note that this program examines CP's linked lists asynchronously,
and interruptable.  Each examination is *not* at an instant of time,
but spread over some period of time; the data it receives
may be inconsistant.  To minimize this, the monitoring machine should
run at maximum priority (priority = 1).  The machine will run
compute bound when it runs, but that is for short intervals (order of
200 milliseconds) every 10 seconds; the performance impact, even on
online applications, should be minimal, and the output will be
much better.
.*
.para;
To access, use the CP DIAL command on a local 3270.
The first screen displayed shows a menu of available commands.
.cs 2 off;
.*
.cs 2 on;
.sec 'FUTURE DEVELOPMENT'
.para;Hard copy output is intended, sometime.  It would be in the form
of screen images written on the printer.
.para;Direct display to the console of the monitoring Virtual Machine,
using the EDGAR interface, is planned.  This will allow someone logged
on the monitoring machine to control CP's tuning parameters, and see
the result (if any) of each change.
.para;The use of the Virtual Machine Communication Facility to send
displays to users logged on remote displays, for display using
the EDGAR interface, is a possibility.
.cs 2 off;
.*
.*
.chap DISPLAYS
     The following listings of displays show the name of the the display
and the PFkey to get to it in the title.  A short description of
each entry is provided.
.para;The ENTER key steps from display to display sequentially,
excepting 'System Synonym Table' and 'Clock'.
.para;There are commands to get to each one of the displays,
if the 3270 has no PFkeys.
.para;For Systems Programmers into tuning (or trying to understand)
VM/370, the sources of the information are named.
Users just trying to get a feel for what VM is doing should ignore them.
.*
.sec 'Menu - PF1'
The Menu is brought up when you first DIAL in, and can be called by
PF1.   It displays the names of displays available, and how to get
to them.
.*
.sec 'System Status - PF2'
The System Status display carries the information about the
operation of the overall VM/370 system.  It is taken mostly from DMKPSA;
some information is accumulated from the scan of VMBLOKs and of
RDEVBLOKs, and some comes from locations named in DMKSYM.
.para;There are four columns on the display, each reflecting a different
class of data.
.verse 'CPU USAGE column'
This covers the actual use that the CPU cycles were put to over the
last snap interval.
All values are expressed in percentages.
.point 'Problem State';- time with a problem state PSW loaded,
i.e. when a Virtual Machine was dispatched (PROBTIME in DMKPSA).
.point 'Page Wait';- time in wait state, when most outstanding I/O
requests were for page I/O (PAGEWAIT in DMKPSA).
.point 'I/O Wait';- time in wait state, most outstanding I/O requests
were for fast devices and not for paging (IONTWAIT in DMKPSA).
.point 'Idle Wait';- time in wait state, most outstanding I/O requests
were to slow (ie terminal) devices (IDLEWAIT in DMKPSA).
.point 'Overhead';- time executing in supervisor state (100% minus
all the above).
.para;The next two lines offer a summary of the preceeding four:
.point 'CPU Busy';- Problem State + Overhead.
.point 'CPU Idle';- Page Wait + I/O Wait + Idle Wait.
.*
.para;The next line normally is blank if the value is a true zero:
.point 'SVC Rate';- the number of SVC's per second handled by CP
(PSASVCCT in DMKPSA).  When running VM ASSIST with ASSIST ON,SVC
only SVC 76 (Error Recording) will be handled by CP.
Note that 'CP TRACE' of non-priveleged instructions results in SVC
ASSIST being turned off for the duration of the trace.
.*
.verse 'STORAGE column'
These values measure the allocation of real core, and the paging
operations used to keep it going.
.point 'Real Core';- the total (K) of real memory on the machine and
being used by CP (DMKSYSRM).
.point 'Free Core';- the total (K) of real memory which is being
available to pageable usage, ie Real Core less the non-pageable nucleus
less pages fixed for I/O less locked pages (DMKDSPNP).
.para;VM calculated paging performance:
.point 'Page Rate';- page reads  plus page writes
per second (PAGERATE in DMKPSA) smoothed over 8 minutes.  Calculated
in DMKSTP.
.point 'Page Load';- Smoothed (over 8 minutes) average page wait
(PAGELOAD in DMKPSA. Calculated in DMKSTP.).
.para;The following are taken from locations in DMKPTR named in the
system name table.
.point 'Page Requests';- page reads (PGREAD in DMKPSA) plus pages
reclaimed from the flush list (DMKPTRPR), per second.  Should
also include pages for which no read was necessary, ie pages which had
no equivalent on the flush list or on auxiliary storage,
but this information does not seem to be available easily.
.point 'Flushes';- (DMKPTRFF) page frames taken from the flush list,
i.e. containing pages marked by the LRU algorithm
as old and unlikely to be used.
.point 'Steals';- (DMKPTRSS) pages taken from in Queue users.
.point 'Reclaimed';- (DMKPTRPR) pages placed on the flush
list, but requested again before the page frame was re-used.
.para
.point 'Share Res';- (DMKPTRSC) number of real page frames
containing 'Shared Segment' pages.
.*
.verse 'QUEUES'
This column summarizes the users on the system.
.point 'Logged On';- number of users logged on.  (DMKSYSNM in SYSLOCS)
.point 'Dialled';- number of local 3270 and start-stop devices which
have accessed a multi-user virtual machine with the DIAL command.
(DMKSYSND in SYSLOCS).
.para;The following are counted during the scan of the VMBLOKs.
Since this takes place asynchronously with the maintainence of this
chain, the numbers are not necessarily exact; i.e.,
Active+Inactive+Asleep may not instantaneously add up to Logged On.
.point 'Active';- number of virtual machines which used some CPU
time over the last snap interval.
.point 'Inactive';- number of virtual machines which used no CPU time,
but were not asleep.
.point 'Sleep';- number of virtual machines which have issued 'CP SLEEP'
command.
.para;
.point 'Queue 1';- number of virtual machines found in Q1 in last scan.
.point 'Queue 2';- ditto, Q2
.point 'Queue 3';- ditto, Q3 (BSEP).
.point 'Eligible';- number of eligible users.
.*
.verse 'CHANNEL SIOs'
This gives the START I/O count per second for each channel, and
the total START I/O's per second issued by the system.
The information is accumulated from a scan of the system RDEVBLOKS.
.*
.*
.sec 'Terminal Device Status - PF3'
This display shows the addresses, and SIO rate, of those
real devices considered terminal devices.
.*
.point ADDR;- real address of the device (note for remote 3270's,
entry is by cluster rather than by network name.
.point SIOS;- SIO rate to this device during the last snap interval.
.*
.para;
If the device is ATTACHed or DIALled to a multi-user virtual machine
(rather than LOGged on), the letter 'A' will display between the
real address and the SIO rate.  If the device is a remote 327X cluster,
and is not dedicated (ie, is run by CP for console devices), the
letter 'C' will appear.
.*
.*
.sec 'Real Device Status - PF4'
Display of all real devices not considered terminals.
.point ADDR;- real address of the device.
.point SIOS;- start i/o rate, unsmoothed, averaged over snap interval.
.POINT SERIAL;- volume serial number (for disk devices).  'CP' appears
in front of the VOLSER if the disk is CP owned.  If the device is
dedicated to a virtual machine, the USERID of the owning machine is
displayed instead of the VOLSER.
.*
.*
.sec 'All Users - PF5'
Display information about all LOGged on Virtual Machines.
.para;
.point 'USERID';- name of the virtual machine.
.point 'S';- status. May be 'A' (active), 'I' (inactive),
or 'S' (asleep).
.point 'CON';- Real Address of Console, if connected.
Blank if disconnected, 4-digit Network ID if logged on a remote 3270
cluster, 'VMPT' if logged on through VM Pass-through (5748-RC1).
.point PRIO;- the user's dispatching priority, 1-99. If the user is
FAVORed, it will be preceeded by an 'F'. If the user is FAVORed NN
percent, it will be preceeded by a '%'. If the user has RESERVEd pages,
it will be followed by an 'R'.
.*
.para;A virtual machine is considered 'Active' if it used any CPU
cycles in the last Snap Interval.
.*
.*
.sec 'Active Users - PF6'
Display information about resource usage by Active users.
.point USERID;- name of virtual machine (VMUSER).
.point CON;- Real Address of Console, if connected.
Blank if disconnected, 4-digit Network ID if logged on a remote 3270
cluster, 'VMPT' if logged on through VM Pass-through (5748-RC1).
.point VRT%;- Time virtual machine was dispatched,
as a percentage of wall clock time. (VMVTIME)
.point TOT%;- Total time (dispatched + CP time) charged to user,
as a percentage of wall clock time. (VMTTIME).
.point Q;- Queue (1, 2, 3) user was in when examined, or 'E' if user was
eligible.
.point F;- 'F' if the user is FAVORed; '%' if the user is FAVORed N
percent.
.point RUN;- Running status of virtual machine, i.e. status as seen by
the virtual machine itself. May be RUN, SIO, WAIT, TIOB.
.point DISP;- Dispatching status of virtual machine, i.e. status as
seen by CP/370.  May be DISP (dispatched), CMPB (compute bound), PRIV
(Simulating a priveleged instruction), PGWT (waiting for a CP paging
operation), IOWT (waiting for the result of an I/O instruction),
or SL (has gone to sleep).
.point SIOS;- Non-spooled SIO instructions issued, per second (VMIOCNT).
.point PGRT;- Page rate, reads + writes per second
(VMPGREAD + VMPGWRIT).
.point CORE;- Real page frames, in K, occupied by virtual machine
when examined (VMPAGES). If the user has SET RESERVE pages, it will be
followed by 'R'.
.point PRWS;- Projected working set, in K (VMWSPROJ).
.*
.*
.sec 'Symbol Table - PF7'
This display shows the entries in DMKSYM and their values,
sorted in alphabetical order.
.sec 'Symbol Table - PF8'
This displays the DMKSYM entries, in address order.
.*
.*
.sec 'Clock - PF12'
Just for fun, this displays a digital clock on the 3270.
It is only updated every minute, so it is quite inexpensive.
.para;The code for generating VM/370 printer separator pages was
borrowed to generate the digits.
.*
.*
.cs 2 on;.* nobody in-house wants to update the thing.
.*
.chap MAINTAINENCE
To re-assemble individual modules, use 'CPWA xxx'.
CPBSE and DMKMAC MACLIBS must be available on an accessed disk.
Disk D is assumed to be a temporary disk to dump listings, etc. on.
.*
.sec 'Non-BSEP Operation Notes'
CPWATCH 3 has not yet been tested under a non-BSEP
system.  The author would appreciate hearing from anyone who tries
to put it up on one.
.*
.para;The only known incompatabilities with unmodified VM/370
are in the presence of a 'QUEUE 3' in BSEP.
To create a version which (should) run on unmodified VM/370:
.point;- take 'DMKB10' out of the 'GLOBAL MACLIB' command
in 'CPWA EXEC'.
.point;- change CPWPRM COPY to SETB global variable '&BSEP' to 0.
.point;- re-assemble CPWSYS and CPWUSR with 'CPWA SYS' and 'CPWA USR'.
.*
.*
.sec 'Module Descriptions'
.point CPWSUP;- Supervisor and I/O handler.
.point CPWDSP;- Display definitions, and service functions.
.point CPWSYS;- Examine PSA and build global system page.
.point CPWDEV;- Examine RDEVBLOKS and build Terminal and Device pages.
.point CPWUSR;
- Examine VMBLOKS and build Active and Logged On user pages.
.point CPWMAN;- Main line logic.
.point CPWASM;- Date / Time of last modification.
.point CPWEND;- Initialization/termination routines.
.*
.sec 'COPY CODE';
.point CPWPRM;- parameters for assembly.
.point CPWDSC;- cross-module DSECTS.
.point SPASSEM;- documentation for structured programming macros.
.*
.sec MACROS;
.point CALL;- Call a 'PROC'.
.point CMD;- Issue a CP command.
.point CPWSUP;- Generate low core CSECT or DSECT.
.point CPWSVC;- Generate SVC table entry.
.point DATA;- Enter Data CSECT
.point DCP;- Request DIAG x'04', display real core.
.point DCPLIST;- Generate plist for DCP macro.
.point DEVENTRY;- Generate entry in output device table.
.point DO;- Structured programming DO group.
.point DSPENTRY;- Generate entry in Display table.
.point DSUB;- Doubleword integer subtract.
.point EDITD;- Edits packed number into external display field.
.point IF;- Structured programming IF group.
.point MODULE;- Define application CSECT
.point PROC;- Define application subroutine.
.point SETIME;- Set interval timer value.
.point SPENDCHK;- Check for all structured programming figures closed.
.point SPOPTION;- Structured programming options.
.point STORAGE;- Enter dynamic storage DSECT.
.point WAIT;- Wait on interval timer.
.point WTO;- Write to monitoring machine console.
.*
.sec 'Problems';
Please address any problems or questions to:
.*
          G. D. George,
          Systems Programmer
          COMINCO LTD.
          Trail, B. C.
          Canada   V1R 4C3

          (604) 364-4940
.cs 2 off;
